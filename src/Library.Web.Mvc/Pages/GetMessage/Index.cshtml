@page

@using Abp.Application.Services.Dto
@using Abp.Notifications;
@using Library.Web.Startup;
@using Library.LibraryService.Dto;
@using Library.LibraryService;
@using Library.Web.Startup;
@using Library.LibraryService

@inject ILibraryAppService LibraryAppService
@inject ILibraryManageAppService LibraryManageAppService

@{
    ViewBag.CurrentPageName = PageNames.GetMessage;
}

@functions{
    public async Task<IActionResult> OnPostAsync(Guid userNotificationId)
    {
        await LibraryAppService.MarkNotificationAsRead(new MarkNotificationAsReadInput
        {
            UserNotificationId = userNotificationId
        });
        return new RedirectToRouteResult(null);
    }

    public bool ShowAll { get; set; }

    public void OnGet(int? type)
    {
        ShowAll = type.HasValue && type.Value == 1;
    }

}

@section scripts
{
    <script src="~/view-resources/Pages/GetMessage/index.js" asp-append-version="true"></script>
    
}

<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="card">
            <div class="header">
                <h2>
                    Message
                </h2>
                        <div style="width:970px;height:30px;">
                        @{
                            var link = ShowAll ? "/GetMessage" : "/GetMessage?type=1";
                            var desc = ShowAll ? "Display Unread" : "Display All";
                        }
                        <a class="btn btn-primary waves-effect change-state header-dropdown m-r--5" style="right"
                            href="@link" >@desc</a>
                        </div>
            </div>
            
            <div class="body table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Content</th>
                            <th>Time</th>
                            <th>Admin</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            Nullable<UserNotificationState> state = UserNotificationState.Unread;
                            if (ShowAll)
                            {
                                state =  null;
                            }

                            var res = await Model.LibraryAppService.GetMyNotifications(new GetMyNotificationsInput()
                            {
                                NotificationState = state
                            });
                        }
                        @{
                            int cnt = 1;
                            foreach (var item in res.Items)
                            {
                                <tr>
                                    <th>@cnt</th>
                                    <td>@item.Content</td>
                                    <td>@item.PublishTime</td>
                                    <td>@item.Publisher</td>
                                    <td><button class="btn btn-primary waves-effect mark-notification" data-type="confirm" data-usernotification-id="@item.UserNotificationId">Mark As Read</button></td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>