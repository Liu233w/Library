@page 

@using Abp.Application.Services.Dto 
@using Abp.UI
@using Library.BookManage
@using Library.LibraryService
@using Library.BookManage.Dto 
@using Library.LibraryService.Dto

@inject IBookAppService BookAppService 
@inject ILibraryAppService LibraryAppService

@{ 
    Layout = null; 
} 

@functions { 
            public BookDto book { get; set; }
            public BookWithStatusAndMine bookstatus { set; get; }

            public async Task OnPostAsync(long bookId)
            {
                if (bookId != 0)
                {
                    bookstatus = await LibraryAppService.GetBook(new GetBookInput
                    {
                        BookId = bookId
                    });
                }
                else
                {
                    throw new UserFriendlyException($"There is no book with id = {bookId}");
                }
            }
        }
<div class="modal-header">
    <h4 class="modal-title">
        <span>Searching Result</span>
    </h4>
</div>
<div class="modal-body">
    <div class="row clearfix">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <div class="card">
                <div class="body table-responsive">
                    <table class="table">
                        <tbody>
                            @{
                            <tr>
                                <th scope="row">Title</th>
                                <td>@bookstatus.Title</td>
                            </tr>
                            <tr>
                                <th scope="row">Author</th>
                                <td>@bookstatus.Author</td>
                            </tr>
                            <tr>
                                <th scope="row">Publish</th>
                                <td>@bookstatus.Publish</td>
                            </tr>
                            <tr>
                                <th scope="row">ISBN</th>
                                <td>@bookstatus.Isbn</td>
                            </tr>
                            <tr>
                                <th scope="row">Count</th>
                                <td>@bookstatus.Count</td>
                            </tr>
                            <tr>
                                <th scope="row">State</th>
                                @{
                                    if (bookstatus.Borrowed)
                                    {
                                        <td>Available</td>
    }
                                    else
                                    {
                                        <td>Unavailable</td>

                                    }

                                }
                            </tr>
                            <tr>
                                <th scope="row">Recevice Date</th>
                                <td>
                                    @bookstatus.BorrowTimeLimit;
                                </td>
                            </tr>
                            <tr>
                                <th scope="row">Description</th>
                                <td>@bookstatus.Description</td>
                            </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal-footer">
    <button type="button" class="btn btn-default waves-effect" data-dismiss="modal">Cancel</button>
</div>